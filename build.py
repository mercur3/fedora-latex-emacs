#!/usr/bin/python3

SUPPORTED_FEDORA_VERSIONS: list[int] = [41, 42, 43]
LATEX_CONFIG = ["base", "medium", "full"]
BASE_BUILD_DIR = "build"


def generate_dockerfiles(version: int, tag_base: str, tag_medium: str, tag_full: str) -> None:
    with open(f"{BASE_BUILD_DIR}/Dockerfile.{version}-base", "w") as fd:
        content = f"""
FROM fedora:{version}

###############################################################################
# WARNING                                                                     #
# This file is autogenerated. Do NOT edit this file. Run =./build.py= instead #
###############################################################################

# By default dnf is configured as a singletheaded application. This configuration aims to increase
# build speed as it spends less time doing I/O operations and connecting to the mirrors.
RUN rm /etc/dnf/dnf.conf
COPY dnf.conf /etc/dnf/
RUN dnf update --nodocs && \\
    dnf install --nodocs emacs-nox texlive-scheme-medium && \\
    dnf install "tex(datetime.sty)";

"""
        fd.write(content)

    with open(f"{BASE_BUILD_DIR}/Dockerfile.{version}-medium", "w") as fd:
        content = f"""
FROM {tag_base}

###############################################################################
# WARNING                                                                     #
# This file is autogenerated. Do NOT edit this file. Run =./build.py= instead #
###############################################################################

LABEL description="Fedora + texlive-medium + Emacs. Can be used to build LaTeX documents with org-mode"
LABEL repository="https://gitlab.com/mercur3-dockerfiles/fedora-latex-emacs.git"
LABEL readme="README.org"

RUN dnf clean all

"""
        fd.write(content)

    with open(f"{BASE_BUILD_DIR}/Dockerfile.{version}-full", "w") as fd:
        content = f"""
FROM {tag_base}

###############################################################################
# WARNING                                                                     #
# This file is autogenerated. Do NOT edit this file. Run =./build.py= instead #
###############################################################################

LABEL description="Fedora + texlive-full + Emacs. Can be used to build LaTeX documents with org-mode"
LABEL repository="https://gitlab.com/mercur3-dockerfiles/fedora-latex-emacs.git"
LABEL readme="README.org"

RUN dnf install --nodocs texlive-scheme-full && \\
    dnf clean all;

"""
        fd.write(content)


def main() -> None:
    output = """
###############################################################################
# WARNING                                                                     #
# This file is autogenerated. Do NOT edit this file. Run =./build.py= instead #
###############################################################################

trigger:
  - master
pr:
  autoCancel: true
  branches:
    include:
      - master
pool:
  vmImage: ubuntu-latest
jobs:
  - job: BuildAndPush
    displayName: 'Build & Push Fedora Images'
    strategy:
      matrix:"""

    for f in SUPPORTED_FEDORA_VERSIONS:
        output += f"""
        f{f}:
          fedora: '{f}'
"""
    output += """
    pool:
      vmImage: ubuntu-latest
    steps:
      - checkout: self

      # 1) Login to Docker Hub using the service connection
      - task: Docker@2
        displayName: 'Docker Hub Login'
        inputs:
          command: login
          containerRegistry: docker-hub-login

      # 2) Prep
      - script: |
          echo "Building on Fedora $(fedora)"
          printf "Using %d threads" $(nproc)
          cd build
        displayName: 'Prep build context'
"""

    # build each variant
    for l in LATEX_CONFIG:
        output += f"""
      - task: Docker@2
        displayName: 'Build $(fedora)-{l}'
        inputs:
          command: build
          dockerfile: build/Dockerfile.$(fedora)-{l}
          tags: |
            mercur3/fedora-latex-emacs:$(fedora)-{l}
"""

    # push the images
    output += f"""
      - task: Docker@2
        displayName: 'Push $(fedora)-medium & $(fedora)-full'
        condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
        inputs:
          command: push
          containerRegistry: docker-hub-login
          images: |
            mercur3/fedora-latex-emacs:$(fedora)-medium
            mercur3/fedora-latex-emacs:$(fedora)-full
"""

    with open("azure-pipelines.yml", "w") as fd:
        output += "\n"
        print(output)
        fd.write(output)


if __name__ == "__main__":
    main()

